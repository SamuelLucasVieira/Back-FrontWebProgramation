-- (Opcional) Apaga as tabelas e tipos se eles já existirem, para permitir executar o script novamente.
DROP TABLE IF EXISTS tarefas;
DROP TABLE IF EXISTS usuarios;
DROP TYPE IF EXISTS user_role;
DROP TYPE IF EXISTS task_status;

-- 1. CRIAÇÃO DE TIPOS ENUMERADOS (ENUM)
-- Usar ENUM é uma boa prática pois garante que apenas os valores definidos possam ser inseridos,
-- além de ser mais eficiente em armazenamento do que texto.

CREATE TYPE user_role AS ENUM (
    'admin',
    'gerencial',
    'visualizacao'
);

CREATE TYPE task_status AS ENUM (
    'pendente',
    'concluida'
);


-- 2. CRIAÇÃO DA TABELA DE USUÁRIOS
CREATE TABLE usuarios (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- Forma moderna de criar um ID auto-incrementável
    username TEXT UNIQUE NOT NULL,                       -- Nome de usuário, deve ser único
    email TEXT UNIQUE NOT NULL,                          -- E-mail, também deve ser único
    hashed_password TEXT NOT NULL,                       -- A senha já criptografada (hash)
    role user_role NOT NULL,                             -- O papel do usuário, usando o tipo ENUM que criamos
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW()        -- Data e hora de criação do registro, com fuso horário
);

-- 3. CRIAÇÃO DA TABELA DE TAREFAS
CREATE TABLE tarefas (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    titulo TEXT NOT NULL,                                -- Título da tarefa, não pode ser nulo
    descricao TEXT,                                      -- Descrição, pode ser nula
    status task_status NOT NULL DEFAULT 'pendente',       -- Status da tarefa, usando o tipo ENUM
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    
    -- Chave Estrangeira: A ligação entre a tarefa e o usuário
    owner_id INT NOT NULL,
    CONSTRAINT fk_owner
        FOREIGN KEY(owner_id) 
        REFERENCES usuarios(id)
        ON DELETE CASCADE -- Se um usuário for deletado, todas as suas tarefas também serão.
);

-- 4. CRIAÇÃO DE ÍNDICES PARA PERFORMANCE
-- É uma boa prática criar um índice na coluna da chave estrangeira para otimizar
-- consultas que buscam todas as tarefas de um determinado usuário.
CREATE INDEX idx_tarefas_owner_id ON tarefas(owner_id);

-- Exemplo de como inserir um usuário admin para começar
-- A senha 'admin123' deve ser transformada em hash pela sua aplicação Python antes de inserir.
-- Exemplo de hash para 'admin123': '$2b$12$EixZa80l8sScZ8jDQ5uresrzQWfBWvA0o1M1bvoUn1gZWtV0I9/Ey'
INSERT INTO usuarios (username, email, hashed_password, role) VALUES 
('admin', 'admin@example.com', '$2b$12$EixZa80l8sScZ8jDQ5uresrzQWfBWvA0o1M1bvoUn1gZWtV0I9/Ey', 'admin');